#These configs are needed to spin up the docker containers needed for this pipeline.

#Docker Drone config. Must have GitHub account, setup GitHub OAuth application (generate new key), created random Drone_RCP key, and have NGROK installed and running to get the NGROK URL.
docker run \
  --volume=/var/lib/drone:/data \
  --env=DRONE_GITHUB_CLIENT_ID={{DRONE_GITHUB_CLIENT_ID}} \
  --env=DRONE_GITHUB_CLIENT_SECRET={{DRONE_GITHUB_CLIENT_SECRET}} \
  --env=DRONE_RPC_SECRET={{DRONE_RPC_SECRET}} \
  --env=DRONE_SERVER_HOST={{xxxxxxx.ngrok.io}} \
  --env=DRONE_SERVER_PROTO=https \
  --env=DRONE_USER_CREATE=username:{{GitHub Username}},admin:true \
  --publish=80:80 \
  --publish=443:443 \
  --restart=always \
  --detach=true \
  --name=drone \
  drone/drone:2

#Docker Drone Runner config. Must have created random Drone_RCP key, and have NGROK installed and running to get the NGROK URL.
docker run --detach \
  --volume=/var/run/docker.sock:/var/run/docker.sock \
  --env=DRONE_RPC_PROTO=https \
  --env=DRONE_RPC_HOST={{xxxxxxx.ngrok.io}} \
  --env=DRONE_RPC_SECRET={{DRONE_RPC_SECRET}} \
  --env=DRONE_RUNNER_CAPACITY=3 \
  --env=DRONE_RUNNER_NAME=my-first-runner \
  --publish=3000:3000 \
  --restart=always \
  --name=runner \
  drone/drone-runner-docker:1

#Docker Batfish config.
docker run --name batfish \
    -v batfish-data:/data  \
    -p 9997:9997 -p 9996:9996 \
    -d batfish/batfish


#Docker SuzieQ config. Change the home directories below to where ever you have have the suzieq folders/config. This container does the polling and the other container spun up in the YAML config queries against this one
docker run -d --restart always -itd \
-v /home/jb/Docker/suz/parquet-out:/suzieq/parquet \
-v /home/jb/Docker/inv.yaml:/suzieq/inv.yaml \
--name sq-poller netenglabs/suzieq:latest